server {
    listen 9000;
    server_name  192.168.27.1;

    # Specify the root directory where the compiled Flutter web app is located
    root /usr/share/nginx/html;

    # Set default index files
    index index.html;

    # Handle CORS (Cross-Origin Resource Sharing)
    location / {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
        try_files $uri $uri/ /index.html;

        # # Add headers for CORS in the main location block instead of the if block
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;

        # # Return a 204 status for OPTIONS requests directly
        # if ($request_method = 'OPTIONS') {
        #     return 204;
        # }

    }

    location /api/ {
        proxy_pass http://127.0.0.1:8080;  # Assuming Gin runs on port 8080 locally
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: add CORS headers here if Gin server doesnâ€™t handle it
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    }
}
